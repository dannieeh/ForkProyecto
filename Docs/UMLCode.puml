@startuml

'Clase Principal que se encarga de levantar el juego
class GameApp{
    -heightScreen : int
    -widthScreen  : int
    -boarGame : board
    #initSettings()
    #initInput()
    #initGameVars()
    #initPhysics()
    #onUpDate()
    #initGame()
    #setScreen(ScreenController TyperScreen)
    #setCharacters(ArrayList players, ArrayList enemies)
}


'Clase encargada de crear items como entidades dentro del juego
class Items{
    nameItems: String
    type: String
    effect()
    textureSprite : texture
}

class medicalKit{
    nameItem : "Medical KIt"
    type : item
    setTextureSprite()
    effect()
}

class adrenalin {
    nameItem : "Adrenalin"
    type : item
    setTextureSprite()
    effect()
}

class TurnController{
   countStepPLayers : int
   countStepEnemies : int
   nextTurn()
}

'Mapas de juego

class mapLevel_01 {
    nameMap : "Main Hall"
    spawnsPLayers : setPlayersSpawns()
    spawnsEnemies : setEnemiesSpawns()
    spawnsPowers : setPowersSpawns()
    spawnsItems : setItemsSpawns()
    spawnsWeanpons : setWeanponsSpawns()
    background : "Main Hall"
}

class mapLevel_02 {
    nameMap : "Alien Prison"
    spawnsPLayers : setPlayersSpawns()
    spawnsEnemies : setEnemiesSpawns()
    spawnsPowers : setPowersSpawns()
    spawnsItems : setItemsSpawns()
    spawnsWeanpons : setWeanponsSpawns()
    background : "Alien Prison"
}


class mapLevel_03 {
    nameMap : "The Lab"
    spawnsPLayers : setPlayersSpawns()
    spawnsEnemies : setEnemiesSpawns()
    spawnsPowers : setPowersSpawns()
    spawnsItems : setItemsSpawns()
    spawnsWeanpons : setWeanponsSpawns()
    background : "The Lab"
}


class mapLevel_04 {
    nameMap : "The Zoo"
    spawnsPLayers : setPlayersSpawns()
    spawnsEnemies : setEnemiesSpawns()
    spawnsPowers : setPowersSpawns()
    spawnsItems : setItemsSpawns()
    spawnsWeanpons : setWeanponsSpawns()
    background : "The Zoo"
}

class Maps {
    nameMap : String
    backgroundTexture : Texture
    spawnsPlayers : ArrayList<array>
    spawnsEnemies : ArrayList<array>
    spawnsPower :  ArrayList<array>
    spawnsWeanpons :  ArrayList<array>
    spawnsItems :  ArrayList<array>
    walls : Texture
    doors : Texture
    loadWalls()
    loadDoors()
}


'Enemies

class Xenomorf{
    name : Xenomorf
    life : 30
    stepCounter : 1
    attack : 10
    animationMov : animationIdle
    setPositionX(int positionX)
    setPositionY(int positionY)
    setSpeedY(int speedY)
    setSpeedX(int speedX)
    animationSkill(Animation animationSkill)
    moveUP(AnimationChannel animationUP)
    moveLeft(AnimationChannel animationLeft)
    moveRight(AnimationChannel animationRight)
    moveDown(AnimationChannel animationDown)
    attack(ANimationChannel animationAttack)
    setAnimationsChannels()
}

class Stalker{
    name : Stalker
    life : 80
    stepCounter : 3
    attack : 25
    animationMov : animationIdle
    setPositionX(int positionX)
    setPositionY(int positionY)
    setSpeedY(int speedY)
    setSpeedX(int speedX)
    animationSkill(Animation animationSkill)
    moveUP(AnimationChannel animationUP)
    moveLeft(AnimationChannel animationLeft)
    moveRight(AnimationChannel animationRight)
    moveDown(AnimationChannel animationDown)
    attack(ANimationChannel animationAttack)
    setAnimationsChannels()
}


class Titan{
    name : Titan
    life : 300
    stepCounter : 1
    attack : 50
    animationMov : animationIdle
    setPositionX(int positionX)
    setPositionY(int positionY)
    setSpeedY(int speedY)
    setSpeedX(int speedX)
    animationSkill(Animation animationSkill)
    moveUP(AnimationChannel animationUP)
    moveLeft(AnimationChannel animationLeft)
    moveRight(AnimationChannel animationRight)
    moveDown(AnimationChannel animationDown)
    attack(ANimationChannel animationAttack)
    setAnimationsChannels()
}


class Drone{
    name : Drone
    life : 50
    stepCounter : 10
    attack : 5
    animationMov : animationIdle
    setPositionX(int positionX)
    setPositionY(int positionY)
    setSpeedY(int speedY)
    setSpeedX(int speedX)
    animationSkill(Animation animationSkill)
    moveUP(AnimationChannel animationUP)
    moveLeft(AnimationChannel animationLeft)
    moveRight(AnimationChannel animationRight)
    moveDown(AnimationChannel animationDown)
    attack(ANimationChannel animationAttack)
    setAnimationsChannels()
}

class IACore{
    name : IACOre
    life : 200
    stepCounter : 5
    attack : 15
    animationMov : animationIdle
    setPositionX(int positionX)
    setPositionY(int positionY)
    setSpeedY(int speedY)
    setSpeedX(int speedX)
    animationSkill(Animation animationSkill)
    moveUP(AnimationChannel animationUP)
    moveLeft(AnimationChannel animationLeft)
    moveRight(AnimationChannel animationRight)
    moveDown(AnimationChannel animationDown)
    attack(ANimationChannel animationAttack)
    setAnimationsChannels()
}




'players
class ElenaDrakeCapitan{
    name :Elena Drake
    life : 150
    skillName : TacticOrder
    stepCounter : 4
    rol : Strategist
    attack : 5
    animationMov : animationIdle
    setPositionX(int positionX)
    setPositionY(int positionY)
    setSpeedY(int speedY)
    setSpeedX(int speedX)
    animationSkill(Animation animationSkill)
    moveUP(AnimationChannel animationUP)
    moveLeft(AnimationChannel animationLeft)
    moveRight(AnimationChannel animationRight)
    moveDown(AnimationChannel animationDown)
    attack(ANimationChannel animationAttack)
    setAnimationsChannels()
}

class EngineerMarcus{
    name : Engiener Marcus
    life : 120
    skillName : Emergens FIx
    stepCounter : 3
    rol : Builder
    attack : 2
    animationMov : animationIdle
    setPositionX(int positionX)
    setPositionY(int positionY)
    setSpeedY(int speedY)
    setSpeedX(int speedX)
    animationSkill(Animation animationSkill)
    moveUP(AnimationChannel animationUP)
    moveLeft(AnimationChannel animationLeft)
    moveRight(AnimationChannel animationRight)
    moveDown(AnimationChannel animationDown)
    attack(ANimationChannel animationAttack)
    setAnimationsChannels()
}

class DraLara{
    name : Dra. Lara
    life : 120
    skillName : Quick analysis
    stepCounter : 3
    rol : Support
    attack : 2
    animationMov : animationIdle
    setPositionX(int positionX)
    setPositionY(int positionY)
    setSpeedY(int speedY)
    setSpeedX(int speedX)
    animationSkill(Animation animationSkill)
    moveUP(AnimationChannel animationUP)
    moveLeft(AnimationChannel animationLeft)
    moveRight(AnimationChannel animationRight)
    moveDown(AnimationChannel animationDown)
    attack(ANimationChannel animationAttack)
    setAnimationsChannels()
}
 
class JaxKane{
    name : Jax Kane
    life : 180
    skillName : Devastating attack
    stepCounter : 2
    rol : Assault
    attack : 10
    animationMov : animationIdle
    setPositionX(int positionX)
    setPositionY(int positionY)
    setSpeedY(int speedY)
    setSpeedX(int speedX)
    animationSkill(Animation animationSkill)
    moveUP(AnimationChannel animationUP)
    moveLeft(AnimationChannel animationLeft)
    moveRight(AnimationChannel animationRight)
    moveDown(AnimationChannel animationDown)
    attack(ANimationChannel animationAttack)
    setAnimationsChannels()
}

class ZaraQuinn{
    name : Zara Quinn
    life : 110
    skillName : Precise shooting
    stepCounter : 6
    rol : Explorer
    attack : 5
    animationMov : animationIdle
    setPositionX(int positionX)
    setPositionY(int positionY)
    setSpeedY(int speedY)
    setSpeedX(int speedX)
    animationSkill(Animation animationSkill)
    moveUP(AnimationChannel animationUP)
    moveLeft(AnimationChannel animationLeft)
    moveRight(AnimationChannel animationRight)
    moveDown(AnimationChannel animationDown)
    attack(ANimationChannel animationAttack)
    setAnimationsChannels()
}
 
 

    
'Clase encargada de crear los atributos de cada jugador o enemigo
class Players{
    -life : int
    -attack : int
    -name :Srting
    -items : itemFactory
    -stepCounter : int
    -rol : String
    -skillName : String
    -animationChannels : Animation
    -animationSkill : AnimationChannel
    -animationUP : AnimationChannel
    -animationLeft :AnimationChannel
    -animationRight :AnimationChannel
    -animationDown :AnimationChannel
    -animationIdle :ANimationChannel
    -animationMov : AnimationChanel
    -animationDead : AnimationChannel
    -animationAttack : AnimationChannel
    -speedX         : int
    -speedY         : int
    -positionX      : int
    -positionY      : int
    
    moveUp()
    moveLeft()
    moveDown()
    moveRight()
    attack()
    idle()
    skillAnimation()
    dead()
    setAnimationsChannels()
    onUpdate()

}

class Enemies{
    -life : int
    -attack : int
    -name :Srting
    -stepCounter : int
    -animationChannels : Animation
    -animationSkill : AnimationChannel
    -animationUP : AnimationChannel
    -animationLeft :AnimationChannel
    -animationRight :AnimationChannel
    -animationDown :AnimationChannel
    -animationIdle :ANimationChannel
    -animationMov : AnimationChanel
    -animationDead : AnimationChannel
    -animationAttack : AnimationChannel
    -speedX         : int
    -speedY         : int
    -positionX      : int
    -positionY      : int
    
    
    moveUp()
    moveLeft()
    moveDown()
    moveRight()
    attack()
    idle()
    dead()
    setAnimationsChannels()
    onUpdate()
}



'Aramas del juego
class Weanpons {
    nameWeanpon : String
    type: String
    effect()
    range : int
    textureSprite : texture
}

class Powers{
    namePower : String
    type : String
    textureSprite : texture
    range : int
    effect()
}


class flamethrower {
    nameWeanpon "Flamethrower"
    type : Weanpon
    range : 2
    attack : 50
    setTextureSprite()
}

class plasmaRifle{
    nameWeanpon : "Plasma Rifle"
    type : weanpon
    range : 5
    attack : 5
    setTextureSprite()
}

'Poderes

class remoteHacking{
    name : "Remote Hacking"
    range : 5
    type : Power
    effect()
    setTexureSprite(Texture)
}

class energyShield {
    name  : "Energy Shield"
    range : 1
    type : Power
    effect()
    setTextureSprite(Texture)
}

'Game Board
class GameBoard{
    enemiesInMapList : ArrayList<Enemies>
    playersInMapList : ArrayList<Players>
    itemsInMap : ArrayList<Items>
    powersInMap : ArrayList<Powers>
    weanponsInMap : ArrayList<Weanpons>
    boardMatrix : ArrayList<int>
    mapInBoard : String
    setEnemies(Enemies enemy)
    setPlayers(Players player)
    setItem(Items item)
    setPower(Powers power)
    setWeapons(Weapons weapon)
    setBoardMap(Maps mapp)
    updateBoard()
}



'Reglas de Agregacion Y Composicion

Enemies o-- "1..*" IACore
Enemies o-- "1..*" Xenomorf
Enemies  o-- "1..*" Drone
Enemies  o-- "1..*" Titan
Enemies  o-- "1..*" Stalker

Players o-- "1" JaxKane
Players o-- "1" EngineerMarcus
Players o-- "1" DraLara
Players o-- "1" ElenaDrakeCapitan
Players o-- "1" ZaraQuinn

GameApp *-- "1" GameBoard

'GameBoard
GameBoard *-- Players : "tiene varios"
GameBoard *-- Enemies : "tiene varios"
GameBoard *-- Items : "tiene varios"
GameBoard *-- Weanpons : "tiene varios"
GameBoard *-- Powers: "tiene varios"
GameBoard *-- Maps : "tiene varios"
TurnController *-- "1" GameBoard

Powers o-- "1..*" energyShield
Powers o-- "1..*" remoteHacking
Weanpons o-- "1..*" flamethrower
Weanpons o-- "1..*" plasmaRifle

Items o-- medicalKit : "tiene un"
Items o-- adrenalin : "tiene un"

Maps o-- mapLevel_01 : "tiene un"
Maps o-- mapLevel_02 : "tiene un"
Maps o-- mapLevel_03 : "tiene un"
Maps o-- mapLevel_04 : "tiene un"



@enduml
